#!/bin/bash
# ---------------------------------------
# @author  icollar
# @version 2.1.1
# @title   ctail
# @desc    coloured tail or less for logs
# ---------------------------------------

function usage () {
	echo -e "\nUsage:\n$0 <file>"
	echo -e "\t-l - less the file"
	echo -e "\t-f - adds follow option (tail only)"
	echo -e "\t-c - adds custom options for tail"
	exit 1
}

if [[ $# -lt 1 ]]; then
	echo -e "Incorrect usage: too many arugments"
	usage
fi

MODE="tail"

while getopts "lfc:h" opt; do
	case $opt in
		l) MODE="less";;
		f) OPTS="-f";;
		c) OPTS=$OPTARG;;
		h) usage;;
		*) usage;;
	esac
done
shift $(($OPTIND - 1))

FILE=${!#}

if [[ ! -f ${FILE} ]]; then
	echo -e "File ${FILE} does not exist or is not a regular file"
	usage
fi

# This doesn't seem to be available on most systems...
# Although it works with it, so meh
#declare -A PERLOPT

if [[ -f ${CTAILFILE:-${HOME}/.ctailrc} ]]; then

	#FG COLORS      BG COLORS
	FG_WHITE=       ; BG_TRANS=
	FG_GREY=";30"   ; BG_GREY=";40"
	FG_RED=";31"    ; BG_RED=";41"
	FG_GREEN=";32"  ; BG_GREEN=";42"
	FG_YELLOW=";33" ; BG_YELLOW=";43"
	FG_BLUE=";34"   ; BG_BLUE=";44"
	FG_PURPLE=";35" ; BG_PURPLE=";45"
	FG_CYAN=";36"   ; BG_CYAN=";46"
	FG_WHITE=";37"  ; BG_WHITE=";47"

	CS0=
	CS1=i

	i=0
	while read -r line
	do
		fg="FG_$(echo $line | awk '{print $1}')"
		bg="BG_$(echo $line | awk '{print $2}')"
		wg=$(echo $line | awk '{print $3}')
		cs="CS$(echo $line | awk '{print $4}')"
		rx=$(echo $line | cut -d' ' -f 5-)

		PERLOPT[$i]="s/$rx/\e[${wg:-0}${!fg}${!bg}m$&\e[m/${!cs}g"
		i=$(($i+1))
	done < <(grep -vE "^$|^\s*#" ${CTAILFILE:-${HOME}/.ctailrc})
else
	PERLOPT[0]='s/^\d{2}\/\d{2}-\d{2}(:\d{2}){2}\.\d{3}/\e[32m$&\e[m/g'
	PERLOPT[1]='s/] (<[a-zA-Z0-9_: ]+>)/] \e[34m$1\e[m/g'
	PERLOPT[2]='s/\[\d+]/\e[33m$&\e[m/g'
	PERLOPT[3]='s/[a-z0-9_]*error[a-z0-9_]*/\e[37;41m$&\e[m/ig'
	PERLOPT[4]='s/ args|rows /\e[32m$&\e[m/ig'
	PERLOPT[5]='s/([ \"])(-?\d+([\.,]\d+)?)([ \n\"])/$1\e[31m$2\e[m$4/ig'
	PERLOPT[6]='s/\d{4}(-\d{2}){2} (\d{2}:){2}\d{2}/\e[35m$&\e[m/g'
	PERLOPT[7]='s/IC--.*/\e[1;33;42m$&\e[m/g'
	PERLOPT[8]='s/\(\d{2}\) ==>/\e[37;41m$&\e[m/g'
fi


PERL=${PERLOPT[0]}
for (( i=1; i<${#PERLOPT[@]}; i++)); do
	PERL="${PERL} | ${PERLOPT[$i]}"
done

# Tail the file then use Perl regex for colouring
if [[ $MODE == "less" ]]; then
	cat ${FILE} | perl -pe "$PERL" | less -r
else
	tail $OPTS ${FILE} | perl -pe "$PERL"
fi

