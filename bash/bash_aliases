# Global Variables
# ----------------
export SSH_OPT="-o ServerAliveInterval=240 -qXt"
export GREP_OPT="-inrsI --color=auto --exclude-dir=.cvs --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn"


# Aliases
# -------
alias boot='source ~/.bashrc'
alias tclsh="rlwrap tclsh"
alias rsync='\rsync -avzC --exclude "*.*.swp"'
alias cp='\cp -r'
alias scp='\scp -r'
alias mkdir='\mkdir -p'
alias h='history'
alias j='jobs -l'
alias which='type -a'
alias ..='cd ..'
alias du='du -kh'
alias df='df -kTh'
alias si='sudo -E vi'
alias ssh="ssh $SSH_OPT"
alias gp="grep $GREP_OPT"


function vi () {
	args=$(echo $@ | sed 's/--.*$//')
	vim -X $args
}

# CVS laziness
alias cvsup='   cvs -q upd -Pd'
alias cvscm='   cvs commit -m'
alias branch='  cvstool -b'
alias checkout='cvstool -c'
alias update='  cvstool -u'
alias merge='   cvstool -m'

# Docker
alias drmi=' docker rmi'
alias dtree='docker images --tree'
alias dps="  docker ps       | awk -F\"  +\" '{printf(\"%-15s%-60s%-20s%-30s%-20s\n\",\$1,\$2,\$4,\$5,\$(NF-1))}'"
alias dpsa=" docker ps --all | awk -F\"  +\" '{printf(\"%-15s%-60s%-20s%-30s%-20s\n\",\$1,\$2,\$4,\$5,\$(NF-1))}'"

# Dockertool aliases
alias drun='   dockertool --run'
alias dbuild=' dockertool --build'
alias dsave='  dockertool --save'
alias dload='  dockertool --load'
alias dclean=' dockertool --clean'
alias dpurge=' dockertool --purge'
alias dimages='dockertool --images'


# Functions
# ---------

# One function, any archive
function extract() {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2) tar xvjf   $1 ;;
			*.tar.gz)  tar xvzf   $1 ;;
			*.bz2)     bunzip2    $1 ;;
			*.rar)     unrar x    $1 ;;
			*.gz)      gunzip     $1 ;;
			*.tar)     tar xvf    $1 ;;
			*.tbz2)    tar xvjf   $1 ;;
			*.tgz)     tar xvzf   $1 ;;
			*.zip)     unzip      $1 ;;
			*.Z)       uncompress $1 ;;
			*.7z)      7z x       $1 ;;
			*) echo "'$1' cannot be extracted via >extract<" ;;
		esac
	else
		echo "'$1' is not a valid file!"
	fi
}

# Compress with prefered method
function compress () {
	tar -cvzf ${1}.tgz ${1}
}

# Allow functions to get quick access to things on the path
function vib () {
	vi $(\which $1)
}

# Change to the directory where a executable lives on the path
function cdb () {
	cd $(dirname $(\which $1))
	here | perl -pe "s/($1)/\e[31m\1\e[m/"
}

# cd to directory of arg... usually after a cp or mv
function cdl () {
	cd $(dirname $(!$))
}

# handy command for unpacking compressed artifacts and preserving versions
function unpack () {
	if [ -f $1 ] ; then
		a=$(echo $1 | awk -F- '{print $2}')
		v=$(echo $1 | awk -F- '{print $3}')
		d="${a}-${v}"

		mkdir $d

		case $1 in
			*.tar.bz2) tar xjf    $1 -C $d ;;
			*.tar.gz)  tar xzf    $1 -C $d ;;
			*.bz2)     bunzip2    $1 -C $d ;;
			*.rar)     unrar x    $1 -C $d ;;
			*.gz)      gunzip     $1 -C $d ;;
			*.tar)     tar xf     $1 -C $d ;;
			*.tbz2)    tar xjf    $1 -C $d ;;
			*.tgz)     tar xzf    $1 -C $d ;;
			*.zip)     unzip      $1 -C $d ;;
			*.Z)       uncompress $1 -C $d ;;
			*.7z)      7z x       $1 -C $d ;;
			*) echo "'$1' cannot be extracted via >extract<" ;;
		esac
	else
		echo "'$1' is not a valid file!"
	fi
}

# Now this is just silly... custom command_not_found_handle function...
eval $(type command_not_found_handle | sed '1d' | sed '1s/handle/handle2/')
function command_not_found_handle () {
	echo "and you fail..."
	command_not_found_handle2 $1
}




# vim:ft=sh:
